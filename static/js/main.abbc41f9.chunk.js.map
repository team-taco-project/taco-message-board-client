{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/post.js","components/post/PostCreate.js","components/post/IndexPost.js","components/ComponentForms/CommentForm.js","components/ComponentForms/PostForm.js","components/post/ShowPost.js","api/comment.js","components/post/UpdatePost.js","components/comment/CreateComment.js","components/comment/UpdateComment.js","components/Footer/Footer.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","unauthenticatedOptions","alwaysOptions","exact","Header","Navbar","expand","padding","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","handleChange","event","target","name","value","onSignUp","preventDefault","msgAlert","history","setUser","password_confirmation","passwordConfirmation","then","res","push","catch","error","icon","faUserPlus","size","color","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","withRouter","SignIn","onSignIn","faSignInAlt","SignOut","clearUser","headers","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","faKey","spin","showPost","CreatePost","onCreatePost","post","createPost","title","subject","content","image","userEmail","as","rows","IndexAllPosts","loading","response","posts","postJsx","map","Card","style","width","Body","_id","Title","Subtitle","Text","reverse","Comment","text","postId","class","onClick","Post","comments","ShowPost","handleDeletePost","match","deletePost","params","handleDeleteComment","commentId","deleteComment","onClickUpdate","handleUpdateComment","UpdatePost","userInput","currState","onUpdatePost","updatePost","err","CreateComment","onCreateComment","comment","createComment","UpdateComment","onUpdateComment","updateComment","footer","App","msgAlerts","filter","msg","uuid","src","alt","path","PostCreate","Footer","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.abbc41f9.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { NavLink } from 'react-router-dom'\nimport './Header.scss'\n\n// import styled from 'styled-components'\n// options available for authenticated user\nconst authenticatedOptions = (\n  <Fragment>\n    <NavLink to='/change-password' className='nav-link' id='text-bar'>\n                Change Password\n    </NavLink>\n    {/* <NavLink to='/create-post' className='nav-link' id='text-bar'>\n                Create Post\n        </NavLink> */}\n    <NavLink to='/sign-out' className='nav-link' id='text-bar'>\n                Sign Out\n    </NavLink>\n  </Fragment>\n)\n// options available for unauthenticated user\nconst unauthenticatedOptions = (\n  <Fragment>\n\n    <NavLink to='/sign-up' className='nav-link' id='text-bar'>\n          Sign Up\n    </NavLink>\n    <NavLink to='/sign-in' className='nav-link' id='text-bar'>\n          Sign In\n    </NavLink>\n  </Fragment>\n)\n// options available regardless of authentication\nconst alwaysOptions = (\n  <Fragment>\n    <NavLink exact to='/posts-all' className='nav-link' id='text-bar'>\n        List of Posts\n    </NavLink>\n  </Fragment>\n)\n\nconst Header = ({ user }) => (\n  <Navbar\n    className='navbar1'\n    variant='dark'\n    expand='md'\n    padding=\"right\">\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n    <Navbar.Collapse id='basic-navbar-nav'>\n      <Nav className='ml-auto'>\n        {/* determines if user is logged in */}\n        {user && (\n          <span className='navbar-text mr-2' id=\"add-margin\">Welcome, {user.email}</span>\n        )}\n        {alwaysOptions}\n        {user ? authenticatedOptions : unauthenticatedOptions}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://fathomless-forest-03421.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n// sign up api\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n// sign in api\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n// sign out api, requires token\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n// change password api, requires token\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport './auth.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\n\n// create sign up class with constructor and state\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\n    // handles change of state in input fields\n    handleChange = (event) =>\n      this.setState({\n        [event.target.name]: event.target.value\n      })\n\n    // handles sign up function on click\n    onSignUp = (event) => {\n      // prevents page reload\n      event.preventDefault()\n      // deconstruct props for later use\n      const { msgAlert, history, setUser } = this.props\n      // sign up API call\n      signUp(this.state)\n        .then(() => signIn(this.state))\n        .then((res) => setUser(res.data.user))\n        .then(() =>\n          msgAlert({\n            heading: 'Sign Up Success',\n            message: signUpSuccess,\n            variant: 'success'\n          })\n        )\n        // redirect user\n        .then(() => history.push('/posts-all'))\n        .catch((error) => {\n          this.setState({ email: '', password: '', passwordConfirmation: '' })\n          msgAlert({\n            heading: 'Sign Up Failed with error: ' + error.message,\n            message: signUpFailure,\n            variant: 'danger'\n          })\n        })\n    }\n\n    render () {\n      // destructuring state for later use\n      const { email, password, passwordConfirmation } = this.state\n      // sign up user form\n      return (\n        <div className='row'>\n          <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n            <center>\n              <FontAwesomeIcon\n                icon={faUserPlus}\n                size='3x'\n                color='white'\n              />\n\n              <h3 className='register'>Sign Up</h3>\n            </center>\n            <br></br>\n            <Form onSubmit={this.onSignUp}>\n              <Form.Group controlId='email'>\n                <Form.Label className='register'>\n                  Email address :\n                </Form.Label>\n                <Form.Control\n                  required\n                  type='email'\n                  name='email'\n                  value={email}\n                  placeholder='Enter email'\n                  onChange={this.handleChange}\n                />\n                <br></br>\n              </Form.Group>\n              <Form.Group controlId='password'>\n                <Form.Label className='register'>\n                  Password :\n                </Form.Label>\n                <Form.Control\n                  required\n                  name='password'\n                  value={password}\n                  type='password'\n                  placeholder='Password'\n                  onChange={this.handleChange}\n                />\n                <br></br>\n              </Form.Group>\n              <Form.Group controlId='passwordConfirmation'>\n                <Form.Label className='register'>\n                  Password Confirmation :\n                </Form.Label>\n                <Form.Control\n                  required\n                  name='passwordConfirmation'\n                  value={passwordConfirmation}\n                  type='password'\n                  placeholder='Confirm Password'\n                  onChange={this.handleChange}\n                />\n              </Form.Group>\n              <br></br>\n              <Button variant='light' type='submit'>\n                Register\n              </Button>\n            </Form>\n          </div>\n        </div>\n      )\n    }\n}\n\nexport default withRouter(SignUp)\n","export const signUpSuccess = 'Successfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\nexport const createPostSuccess = 'Post created successfully!'\nexport const createPostFailure = 'Failed to create a post.  Try again.'\nexport const createCommentSuccess = 'Comment created successfully!'\nexport const createCommentFailure = 'Failed to create a comment.  Try again.'\nexport const updateCommentSuccess = 'Comment updated.'\nexport const updateCommentFailure = 'Failed to update comment.  Try again.'\nexport const showIndexSuccess = 'Index of posts.'\nexport const showIndexFailure = 'Can not get posts.'\nexport const showPostSuccess = 'Here is your post.'\nexport const showPostFailure = 'Can not get your post.'\nexport const deletePostSuccess = 'Post deleted.'\nexport const deletePostFailure = 'Failed to delete post.'\nexport const deleteCommentSuccess = 'Comment deleted.'\nexport const deleteCommentFailure = 'Can not delete comment.'\nexport const updatePostSuccess = 'Post updated.'\nexport const updatePostFailure = 'Can not update post.'\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport './auth.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons'\n\n// Create sign in class with state\nclass SignIn extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\n  // handles state change of input fields\n  handleChange = (event) =>\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n\n    // handles sign in event\n    onSignIn = (event) => {\n      // prevents page reload\n      event.preventDefault()\n      // destructuring of props for later use\n      const { msgAlert, history, setUser } = this.props\n      // sign in API call\n      signIn(this.state)\n        .then((res) => setUser(res.data.user))\n        .then(() =>\n          msgAlert({\n            heading: 'Sign In Success',\n            message: signInSuccess,\n            variant: 'success'\n          })\n        )\n        // send to post list when success\n        .then(() => history.push('/posts-all'))\n        .catch((error) => {\n          this.setState({ email: '', password: '' })\n          msgAlert({\n            heading: 'Sign In Failed with error: ' + error.message,\n            message: signInFailure,\n            variant: 'danger'\n          })\n        })\n    }\n\n    render () {\n      // destructuring state for later use\n      const { email, password } = this.state\n      // sign in form\n      return (\n        <div className='row'>\n          <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n            <center>\n              <FontAwesomeIcon icon={faSignInAlt} size='3x' color='white' />\n              <h3 className='register'>Sign In</h3>\n            </center>\n            <br></br>\n            <Form onSubmit={this.onSignIn}>\n              <Form.Group controlId='email'>\n                <Form.Label className='register'>Email address :</Form.Label>\n                <Form.Control\n                  required\n                  type='email'\n                  name='email'\n                  value={email}\n                  placeholder='Enter email'\n                  onChange={this.handleChange}\n                />\n              </Form.Group>\n              <br></br>\n              <Form.Group controlId='password'>\n                <Form.Label className='register'>Password :</Form.Label>\n                <Form.Control\n                  required\n                  name='password'\n                  value={password}\n                  type='password'\n                  placeholder='Password'\n                  onChange={this.handleChange}\n                />\n              </Form.Group>\n              <br></br>\n              <Button variant='light' type='submit'>\n                Submit\n              </Button>\n            </Form>\n          </div>\n        </div>\n      )\n    }\n}\n\nexport default withRouter(SignIn)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\nimport './auth.scss'\n\n// Create sign out class\nclass SignOut extends Component {\n  // on page load\n  componentDidMount () {\n    // destructuring props for later use\n    const { msgAlert, history, clearUser, user } = this.props\n    // sign out API call\n    signOut(user)\n      .finally(() =>\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      )\n      // redirects user on sign out\n      .finally(() => history.push('/'))\n      // clears user\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport './auth.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faKey } from '@fortawesome/free-solid-svg-icons'\n\n// create change password component\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\n  // handles state change in input fields of form\n  handleChange = (event) =>\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n\n  // change password function on click event\n  onChangePassword = (event) => {\n  // prevents reset of browser\n    event.preventDefault()\n    // destructuring fo props for later use\n    const { msgAlert, history, user } = this.props\n    // api call to change password\n    changePassword(this.state, user)\n      .then(() =>\n        msgAlert({\n          heading: 'Change Password Success',\n          message: changePasswordSuccess,\n          variant: 'success'\n        })\n      )\n    // returns to homepage\n      .then(() => history.push('/posts-all'))\n      .catch((error) => {\n      // sets clears old and new password state if error\n        this.setState({ oldPassword: '', newPassword: '' })\n        msgAlert({\n          heading: 'Change Password Failed with error: ' + error.message,\n          message: changePasswordFailure,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    // destructuring of passwords for later use\n    const { oldPassword, newPassword } = this.state\n\n    return (\n      <div className='row'>\n        <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n          <center>\n            <FontAwesomeIcon icon={faKey} size='3x' color='white' spin />\n            <h3 className='register'>Change Password</h3>\n          </center>\n          <Form onSubmit={this.onChangePassword}>\n            <br></br>\n            <Form.Group controlId='oldPassword'>\n              <Form.Label className='register'>Old password :</Form.Label>\n              <Form.Control\n                required\n                name='oldPassword'\n                value={oldPassword}\n                type='password'\n                placeholder='Old Password'\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <br></br>\n            <Form.Group controlId='newPassword'>\n              <Form.Label className='register'>New Password :</Form.Label>\n              <Form.Control\n                required\n                name='newPassword'\n                value={newPassword}\n                type='password'\n                placeholder='New Password'\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <br></br>\n            <Button variant='light' type='submit'>\n                  Change Password\n            </Button>\n            <div className='divider' />\n            <Link to={'/posts-all'} className='btn btn-outline-light'>\n                  Cancel\n            </Link>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ChangePassword)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\n// Create Post Request\n// assume that `data` is an object with `title` and `director`\n// { title: 'something', director: 'someone' }\nexport const createPost = (data, user) => {\n  return axios({\n    url: apiUrl + '/create-post',\n    method: 'POST',\n    data: { post: data },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// Index request\n// no data, we will need a token\nexport const indexPosts = (user) => {\n  return axios({\n    // method key sets the HTTP verb/method for this request\n    // GET is the default method, so we can include or not up to us\n    method: 'GET',\n    url: apiUrl + '/posts',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n// index all posts, no token needed.  Anyone can view posts.\n\nexport const indexAllPosts = () => {\n  return axios({\n    // method key sets the HTTP verb/method for this request\n    // GET is the default method, so we can include or not up to us\n    method: 'GET',\n    url: apiUrl + '/posts-all'\n  })\n}\n\n// GET /Posts/:id, requires token\nexport const showPost = (id, user) => {\n  return axios({\n    url: apiUrl + '/post/' + id,\n    // method is optional, default is GET\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// DELETE /Posts/:id, requires token\nexport const deletePost = (id, user) => {\n  return axios({\n    url: apiUrl + '/post/' + id,\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// PATCH /Posts/:id, requires token\nexport const updatePost = (data, id, user) => {\n  return axios({\n    url: apiUrl + '/update-post/' + id,\n    method: 'patch',\n    data: { post: data },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport { createPost } from '../../api/post'\nimport { createPostSuccess, createPostFailure } from '../AutoDismissAlert/messages'\nimport './post.scss'\n// create create post class, constructor and state\nclass CreatePost extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      title: '',\n      subject: '',\n      content: '',\n      image: '',\n      userEmail: ''\n    }\n  }\n\n  // sets state of userEmail on page load\n  componentDidMount () {\n    this.setState({ userEmail: this.props.user.email })\n  }\n\n    // changes state of input values\n    handleChange = (event) =>\n      this.setState({\n        [event.target.name]: event.target.value\n      })\n\n    // creates post on click\n    onCreatePost = (event) => {\n      // prevent page refresh\n      event.preventDefault()\n      // destructuring props for use later\n      const { msgAlert, history, user } = this.props\n      // create post API call\n      createPost(this.state, user)\n        .then(() =>\n          msgAlert({\n            heading: 'Post Created',\n            message: createPostSuccess,\n            variant: 'success'\n          })\n        )\n      // redirect to after post created\n        .then((res) => history.push('/posts-all'))\n        .catch((error) => {\n          this.setState({ title: '', subject: '', content: '', image: '' })\n          msgAlert({\n            heading: 'Failed with error: ' + error.message,\n            message: createPostFailure,\n            variant: 'danger'\n          })\n        })\n      // redirect after post create fail\n        .then(() => history.push('/posts-all'))\n    }\n\n    render () {\n      // destructuring state for later use\n      const { title, subject, content } = this.state\n      // create create post form\n      return (\n        <>\n          <div className='row' id='showPost'>\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n              <center>\n                <h3 className='register'>Create Post</h3>\n              </center>\n              <Form onSubmit={this.onCreatePost}>\n                <Form.Group controlId='title'>\n                  <Form.Label>Post Title :</Form.Label>\n                  <Form.Control\n                    required\n                    name='title'\n                    value={title}\n                    placeholder='Post Title'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <br />\n                <Form.Group controlId='subject'>\n                  <Form.Label>Subject :</Form.Label>\n                  <Form.Control\n                    required\n                    name='subject'\n                    value={subject}\n                    placeholder='subject'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <br />\n                <Form.Group controlId='content'>\n                  <Form.Label>content :</Form.Label>\n                  <Form.Control\n                    required\n                    name='content'\n                    value={content}\n                    placeholder='content'\n                    as='textarea'\n                    rows={4}\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                {/* <Form.Group controlId='image'>\n                  <Form.Label>Image</Form.Label>\n                  <Form.Control\n                    name='image'\n                    value={image}\n                    placeholder='image'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group> */}\n                <br />\n                <div className='d-grid gap-2 col-6 mx-auto'>\n                  <Button variant='btn btn-secondary' type='submit'>\n                    Submit\n                  </Button>\n                </div>\n              </Form>\n            </div>\n          </div>\n        </>\n      )\n    }\n}\n\nexport default withRouter(CreatePost)\n","import React from 'react'\nimport { withRouter, Link, NavLink } from 'react-router-dom'\nimport { indexAllPosts } from '../../api/post'\nimport { showIndexFailure } from '../AutoDismissAlert/messages'\nimport Card from 'react-bootstrap/Card'\nimport './post.scss'\nimport './IndexPost.scss'\n// create index of all posts class and constructor with state\nclass IndexAllPosts extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      post: null,\n      loading: true\n    }\n  }\n\n  // occurs on page render first time\n  componentDidMount () {\n    const { user, msgAlert } = this.props\n    // API call for index of all posts\n    indexAllPosts(user)\n      .then((response) =>\n        this.setState({\n          post: response.data.posts,\n          loading: false\n        })\n      )\n      // .then(() =>\n      //   msgAlert({\n      //     heading: 'Index Success',\n      //     message: showIndexSuccess,\n      //     variant: 'success'\n      //   })\n      // )\n      .catch(() =>\n        msgAlert({\n          heading: 'Index Fail',\n          message: showIndexFailure,\n          variant: 'danger'\n        })\n      )\n  }\n\n  render () {\n    // if statement handles the issue when state is null\n    // cannot handle initial render with null.\n    if (this.state.post === null) {\n      return 'loading...'\n    }\n    // variable to save array.map()\n    let postJsx\n    if (this.posts === null) {\n      <h3>No post</h3>\n    } else {\n      // create list of posts\n      postJsx = this.state.post.map((post) => (\n        <li key={post._id}>\n          <Card className='box-post' style={{ width: '80%' }}>\n            <Card.Body className='bg-box'>\n              <Link className='link-title' to={`/post/${post._id}`}>\n                <Card.Title className='title-post'>{post.title}</Card.Title>\n              </Link>\n              <h6>created by: {post.userEmail} </h6>\n\n              <Card.Subtitle className='mb-2 text-muted'>\n                {post.subject}\n              </Card.Subtitle>\n              <Card.Text>{post.content}</Card.Text>\n              <Link\n                to={`/post/${post._id}/edit`}\n                className='btn btn-outline-secondary'>\n                    Update Post\n              </Link>\n            </Card.Body>\n          </Card>\n          <br></br>\n        </li>\n      ))\n    }\n    return (\n      <div>\n\n        <br />\n        <h1 className='topic'>Share your thought ..</h1>\n\n        <NavLink to='/create-post'>\n          <button\n            type='button'\n            className='btn btn-secondary btn-lg'\n            id='create-btn'>\n                      Create Post\n          </button>\n        </NavLink>\n        <p>{this.state.loading && 'loading ...'}</p>\n\n        {/* display posts */}\n        <ul>{postJsx.reverse()}</ul>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(IndexAllPosts)\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport { Link } from 'react-router-dom'\n// creating a component comment that accepts props it will be passed\nconst Comment = (props) => (\n  <Card>\n    <Card.Header>Comment</Card.Header>\n    <Card.Body>\n      <Card.Text>\n        {props.text}\n      </Card.Text>\n      <Link to={`/comments/${props.postId}/${props._id}/`} className=\"btn btn-outline-dark\">Update Comment</Link>\n      <Button class='btn btn-outline-danger' onClick={() => props.onClick(props._id)}>Delete Comment</Button>\n    </Card.Body>\n  </Card>\n)\n\nexport default Comment\n","import React, { Fragment } from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Comment from './CommentForm'\nimport '../post/post.scss'\n\n// create show post format\nconst Post = (props) => (\n  <Fragment>\n    <Card id='showPost-bg' style={{ width: '100%' }}>\n      <Card.Body>\n        <center>\n          <h2 className='register'> {props.title}</h2>{' '}\n        </center>\n        <h6>Subject : {props.subject}</h6>\n        <Card.Text>{props.content}</Card.Text>\n        <h6>Image : </h6>\n        <h3>Post</h3>\n        <h5>Title</h5>\n        <Card.Title>{props.title}</Card.Title>\n        <h6>User</h6>\n        <Card.Subtitle className='mb-2 text-muted'>\n          {props.userEmail}\n        </Card.Subtitle>\n        <h6>Sub-Title</h6>\n        <Card.Subtitle className='mb-2 text-muted'>\n          {props.subject}\n        </Card.Subtitle>\n        <h6>Text</h6>\n        <Card.Text>{props.content}</Card.Text>\n        {/* <h6>Image</h6>\n        <Card.Link href={props.image}>Image Link</Card.Link> */}\n        <Card.Text>\n          {props.comments.map(({ id, text, image, _id }) => (\n            // passing props to comment form component\n            <Comment\n              key={id}\n              text={text}\n              image={image}\n              _id={_id}\n              postId={props.postId}\n              // here we are carrying through onClick from Post to be handed down to Comment\n              onClick={props.onClick}\n              // onClickUpdate={props.onClickUpdate}\n            />\n          ))}\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  </Fragment>\n)\n\nexport default Post\n","import React, { Component } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n// API request\nimport { showPost, deletePost } from '../../api/post'\nimport { deleteComment } from '../../api/comment'\nimport Button from 'react-bootstrap/Button'\nimport Post from '../ComponentForms/PostForm'\nimport {\n  showPostFailure, deletePostSuccess,\n  deletePostFailure, deleteCommentSuccess, deleteCommentFailure\n} from '../AutoDismissAlert/messages'\nimport './post.scss'\n// creates single show post with constructor, state\nclass ShowPost extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      post: {\n        title: '',\n        subject: '',\n        content: '',\n        image: '',\n        userEmail: '',\n        comments: []\n      }\n    }\n  }\n\n  // on initial page render\n  componentDidMount () {\n    // destructuring props for later use\n    const { match, user, msgAlert } = this.props\n    // show post API call\n    showPost(match.params.id, user)\n      // sets state of post\n      .then((res) => this.setState({ post: res.data.post }))\n      // .then(() =>\n      //   msgAlert({\n      //     heading: 'Show post success',\n      //     message: showPostSuccess,\n      //     variant: 'success'\n      //   })\n      // )\n      .catch(() =>\n        msgAlert({\n          heading: 'Show post failed :(',\n          message: showPostFailure,\n          variant: 'danger'\n        })\n      )\n  }\n\n  handleDeletePost = (event) => {\n    const { match, user, msgAlert, history } = this.props\n    deletePost(match.params.id, user)\n    // Redirect to the list of posts\n      .then(() => history.push('/posts-all'))\n      .then(() =>\n        msgAlert({\n          heading: 'Delete post successfully',\n          message: deletePostSuccess,\n          variant: 'success'\n        })\n      )\n      .catch(() =>\n        msgAlert({\n          heading: 'Delete post failed :(',\n          message: deletePostFailure,\n          variant: 'danger'\n        })\n      )\n  }\n\n  // handles delete comment\n  handleDeleteComment = (_id) => {\n    // destructuring props for later use\n    const { match, user, msgAlert, history } = this.props\n    // delete comment API call\n    deleteComment(match.params.id, _id, user)\n      .then(() =>\n        msgAlert({\n          heading: 'Delete comment successfully',\n          message: deleteCommentSuccess,\n          variant: 'success'\n        })\n      )\n    // Redirect to the list of posts\n      .then(() => history.push('/posts-all/'))\n      .catch(() =>\n        msgAlert({\n          heading: 'Delete post failed :(',\n          message: deleteCommentFailure,\n          variant: 'danger'\n        })\n      )\n  }\n\n  render () {\n    // deconstructing state of post for later use\n    const { title, subject, content, image, comments, _id, userEmail } = this.state.post\n    return (\n      <div>\n        {/* bringing in the component Post that is accepting passed down data as props */}\n        <br />\n        <Post id=\"showPost-bg\"\n          title={title}\n          subject={subject}\n          content={content}\n          image={image}\n          comments={comments}\n          userEmail={userEmail}\n          postId={_id}\n          // our functions are passed to PostForm\n          onClick={this.handleDeleteComment}\n          onClickUpdate={this.handleUpdateComment}\n        />\n        <br />\n        {/* button to delete post */}\n        <Button\n          onClick={this.handleDeletePost}\n          variant='danger'\n          className='btn-primary'>\n          Delete Post\n        </Button>\n        {/* create comment */}\n        <div className='divider' />\n        <Link to={`/comments/${_id}`} class='btn btn-secondary'>\n          Make Comment\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ShowPost)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\n// Create comment API Request, requires user.token\nexport const createComment = (data, user, id) => {\n  // data.postId = id\n  return axios({\n    url: apiUrl + '/post/' + id,\n    method: 'POST',\n    data: { comment: data },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// DELETE /Posts/:id, requires user.token\nexport const deleteComment = (postId, commentId, user) => {\n  return axios({\n    url: apiUrl + '/post/' + postId + '/' + commentId,\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// PATCH /Posts/:id, requires token\nexport const updateComment = (data, commentId, postId, user) => {\n  return axios({\n    url: apiUrl + '/post/' + postId + '/' + commentId,\n    method: 'PATCH',\n    data: { comment: data },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n// API request\nimport { updatePost, showPost } from '../../api/post'\nimport { updatePostSuccess, updatePostFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport './post.scss'\n// create class for update post with constructor and state\nclass UpdatePost extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      post: {\n        title: '',\n        subject: '',\n        content: '',\n        image: ''\n      }\n    }\n  }\n\n  // on page load\n  componentDidMount () {\n    // destructuring props for later use\n    const { match, user, msgAlert } = this.props\n    // show post API call\n    showPost(match.params.id, user)\n      // sets new state of post\n      .then(res => this.setState({ post: res.data.post }))\n      .catch(err => msgAlert({\n        heading: 'Show post failed :(',\n        message: 'Something went wrong: ' + err.message,\n        variant: 'danger'\n      }))\n  }\n\n    // handles state change for input\n    handleChange = (event) => {\n      const userInput = { [event.target.name]: event.target.value }\n      this.setState(currState => {\n        // \"Spread\" out current post state key/value pairs\n        return { post: { ...currState.post, ...userInput } }\n      })\n    }\n\n    // updates post on click\n    onUpdatePost = (event) => {\n      // prevent page reload\n      event.preventDefault()\n      // destructuring props for later use\n      const { user, msgAlert, history, match } = this.props\n      // updatePost API call\n      updatePost(this.state.post, match.params.id, user)\n        .then(() => msgAlert({\n          heading: 'Post Updated!',\n          message: updatePostSuccess,\n          variant: 'success'\n        }))\n        .then(res => history.push('/posts-all'))\n        .catch(() => {\n          msgAlert({\n            heading: 'Post update failed :(',\n            message: updatePostFailure,\n            variant: 'danger'\n          })\n        })\n    }\n\n    render () {\n      // destructuring state of post for later use\n      const { title, subject, content, image } = this.state.post\n      // update post form\n      return (\n        <>\n          <div className='row' id='showPost'>\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n              <h3 className='register'>Update Post</h3>\n              <Form onSubmit={this.onUpdatePost}>\n                <Form.Group controlId='title'>\n                  <Form.Label>Post Title :</Form.Label>\n                  <Form.Control\n                    required\n                    name='title'\n                    value={title}\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Form.Group controlId='subject'>\n                  <Form.Label>Subject :</Form.Label>\n                  <Form.Control\n                    required\n                    name='subject'\n                    value={subject}\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Form.Group controlId='content'>\n                  <Form.Label>Content :</Form.Label>\n                  <Form.Control\n                    required\n                    name='content'\n                    value={content}\n                    as='textarea'\n                    rows={4}\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Form.Group controlId='image'>\n                  <Form.Label>Image :</Form.Label>\n                  <Form.Control\n                    name='image'\n                    value={image}\n                    placeholder='image'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <br />\n                <div className='d-grid gap-2 col-6 mx-auto'>\n                  <Button variant='primary' type='submit'>\n                    Submit\n                  </Button>\n                </div>\n                <Link to={'/posts-all'} className=\"btn btn-primary\">Cancel</Link>\n              </Form>\n            </div>\n          </div>\n        </>\n      )\n    }\n}\n\nexport default withRouter(UpdatePost)\n","import React, { Component } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { createCommentSuccess, createCommentFailure } from '../AutoDismissAlert/messages'\nimport { createComment } from '../../api/comment'\nimport './comment.scss'\n// create create comment class with constructor and state\nclass CreateComment extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      text: '',\n      image: ''\n    }\n  }\n\n        // handles state change of input fields\n        handleChange = (event) =>\n          this.setState({\n            [event.target.name]: event.target.value\n          })\n\n        // handles create comment event on click\n        onCreateComment = (event) => {\n          // prevent browser refresh\n          event.preventDefault()\n          // deconstructing props for later use\n          const { msgAlert, history, user, match } = this.props\n          // create comment API call\n          createComment(this.state, user, match.params.id)\n            .then(() =>\n              msgAlert({\n                heading: 'Comment Created',\n                message: createCommentSuccess,\n                variant: 'success'\n              })\n            )\n            // redirect user on create comment success\n            .then((res) => history.push('/post/' + match.params.id))\n            .catch((error) => {\n              this.setState({ text: '', image: '' })\n              msgAlert({\n                heading: 'Failed with error: ' + error.message,\n                message: createCommentFailure,\n                variant: 'danger'\n              })\n              // redirect on create comment failure\n              history.push('/post/' + match.params.id)\n            })\n        }\n\n        render () {\n          // destructuring state for later use\n          const { text } = this.state\n          // create comment form\n          return (\n            <>\n              <div className='row' id='showPost'>\n                <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n                  <h3 className='register'>Create Comment</h3>\n                  <Form onSubmit={this.onCreateComment}>\n                    <Form.Group controlId='text'>\n                      <Form.Label>Comment Text :</Form.Label>\n                      <Form.Control\n                        required\n                        name='text'\n                        value={text}\n                        placeholder='Comment Title'\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    {/* <Form.Group controlId='image'>\n                      <Form.Label>Image</Form.Label>\n                      <Form.Control\n                        name='image'\n                        value={image}\n                        placeholder='image'\n                        onChange={this.handleChange}\n                      /> */}\n                    {/* </Form.Group> */}\n                    <br />\n                    <Button variant='light' type='submit'>\n                      Submit\n                    </Button>\n                    <div className='divider' />\n                    <Link to={'/posts-all'} className='btn btn-outline-light'>\n                      Cancel\n                    </Link>\n                  </Form>\n                </div>\n              </div>\n            </>\n          )\n        }\n}\n\nexport default withRouter(CreateComment)\n","import React, { Component } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n// API request\nimport { updateComment } from '../../api/comment'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { updateCommentSuccess, updateCommentFailure } from '../AutoDismissAlert/messages'\nimport './comment.scss'\n// create update comment class -- under construction\nclass UpdateComment extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      comment: {\n        text: '',\n        image: ''\n      }\n    }\n  }\n\n    handleChange = (event) => {\n      // because `this.state.comment` is an object with multiple keys, we have to do some fancy updating\n      const userInput = { [event.target.name]: event.target.value }\n      this.setState(currState => {\n        // \"Spread\" out current comment state key/value pairs, then add the new one at the end\n        // this will override the old key/value pair in the state but leave the others untouched\n        return { comment: { ...currState.comment, ...userInput } }\n      })\n    }\n\n    onUpdateComment = (event) => {\n      event.preventDefault()\n      const { user, msgAlert, history, match } = this.props\n      updateComment(this.state.comment, match.params.id, match.params.postId, user)\n        .then(() => msgAlert({\n          heading: 'Comment Updated!',\n          message: updateCommentSuccess,\n          variant: 'success'\n        }))\n        // redirect on success\n        .then(res => history.push(`/post/${match.params.postId}`))\n        .catch(() => {\n          msgAlert({\n            heading: 'Comment update failed :(',\n            message: updateCommentFailure,\n            variant: 'danger'\n          })\n        })\n    }\n\n    render () {\n      // destructuring comment state for later use\n      const { text, image } = this.state.comment\n      // update comment form\n      return (\n        <>\n          <div className='row' id='showPost'>\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n              <h3 className='register'>Update Comment</h3>\n              <Form onSubmit={this.onUpdateComment}>\n                <Form.Group controlId='text'>\n                  <Form.Label>Comment Text</Form.Label>\n                  <Form.Control\n                    required\n                    name='text'\n                    value={text}\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Form.Group controlId='image'>\n                  <Form.Label>Image</Form.Label>\n                  <Form.Control\n                    name='image'\n                    value={image}\n                    placeholder='image'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <br />\n                <Button variant='light' type='submit'>\n                  Submit\n                </Button>\n                <div className='divider' />\n                <Link to={'/posts-all'} className='btn btn-outline-light'>\n                  Cancel\n                </Link>\n              </Form>\n            </div>\n          </div>\n        </>\n      )\n    }\n}\n\nexport default withRouter(UpdateComment)\n","import React from 'react'\nimport './footer.scss'\n\nfunction footer () {\n  return (\n    <div>\n\n    </div>\n  )\n}\n\nexport default footer\n","/* eslint-disable no-tabs */\nimport React, { Component, Fragment } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\nimport './App.scss'\n// import styled from 'styled-components'\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport PostCreate from './components/post/PostCreate'\nimport IndexAllPosts from './components/post/IndexPost'\nimport ShowPost from './components/post/ShowPost'\nimport UpdatePost from './components/post/UpdatePost'\nimport CreateComment from './components/comment/CreateComment'\nimport UpdateComment from './components/comment/UpdateComment'\nimport Footer from './components/Footer/Footer'\n\n// create app class with constructor and state\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      user: null,\n      msgAlerts: []\n    }\n  }\n\n  // set user method sets state of user\n  setUser = (user) => this.setState({ user })\n  // clear user method sets state of user to null\n  clearUser = () => this.setState({ user: null })\n  // delete alert method\n  deleteAlert = (id) => {\n    this.setState((state) => {\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\n    })\n  }\n\n  // message alert method creates messages\n  msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    this.setState((state) => {\n      return {\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\n      }\n    })\n  }\n\n  render () {\n    // deconstructing state for later use\n    const { msgAlerts, user } = this.state\n    // displays header\n    return (\n      <Fragment>\n        <Link to='/posts-all'>\n          <img\n            src='https://i.imgur.com/tw8ziCS.png'\n            alt='Taco-message-board'\n            className='nameLogo'></img>\n        </Link>\n        <Header user={user} />\n        {msgAlerts.map((msgAlert) => (\n          <AutoDismissAlert\n            key={msgAlert.id}\n            heading={msgAlert.heading}\n            variant={msgAlert.variant}\n            message={msgAlert.message}\n            id={msgAlert.id}\n            deleteAlert={this.deleteAlert}\n          />\n        ))}\n        {/* routes */}\n        <main className='container'>\n          {/* unauthenticated post routes */}\n          <Route\n            path='/sign-up'\n            render={() => (\n              <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path='/sign-in'\n            render={() => (\n              <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path='/posts-all'\n            render={() => <IndexAllPosts msgAlert={this.msgAlert} user={this.user} />}\n          />\n          {/* authenticated post routes */}\n          <AuthenticatedRoute\n            user={user}\n            path='/sign-out'\n            render={() => (\n              <SignOut\n                msgAlert={this.msgAlert}\n                clearUser={this.clearUser}\n                user={user}\n              />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/change-password'\n            render={() => (\n              <ChangePassword msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/create-post'\n            render={() => <PostCreate msgAlert={this.msgAlert} user={user} />}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/post/:id/edit'\n            render={() => <UpdatePost msgAlert={this.msgAlert} user={user} />}\n          />\n          <AuthenticatedRoute\n            user={user}\n            exact\n            path='/post/:id'\n            render={() => <ShowPost msgAlert={this.msgAlert} user={user} />}\n          />\n          {/* authenticated comments routes */}\n          <AuthenticatedRoute\n            user={user}\n            exact\n            path='/comments/:id'\n            render={() => (\n              <CreateComment msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            exact\n            path='/comments/:postId/:id'\n            render={() => (\n              <UpdateComment msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n        </main>\n        <br />\n        <Footer />\n      </Fragment>\n    )\n  }\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}