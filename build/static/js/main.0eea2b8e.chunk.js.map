{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/post.js","components/post/PostCreate.js","components/post/IndexPost.js","components/ComponentForms/CommentForm.js","components/ComponentForms/PostForm.js","components/post/ShowPost.js","api/comment.js","components/post/UpdatePost.js","components/comment/CreateComment.js","components/comment/UpdateComment.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","unauthenticatedOptions","alwaysOptions","exact","Header","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","handleChange","event","target","name","value","onSignUp","preventDefault","msgAlert","history","setUser","password_confirmation","passwordConfirmation","then","res","push","catch","error","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","withRouter","SignIn","onSignIn","SignOut","clearUser","headers","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","showPost","CreatePost","onCreatePost","post","createPost","title","subject","content","image","as","rows","IndexAllPosts","loading","response","posts","postJsx","map","Card","style","width","Body","_id","Title","Subtitle","Text","Comment","text","onClick","postId","onClickUpdate","Post","comments","ShowPost","handleDeletePost","match","deletePost","params","handleDeleteComment","commentId","deleteComment","handleUpdateComment","UpdatePost","userInput","currState","onUpdatePost","updatePost","err","CreateComment","onCreateComment","comment","createComment","UpdateComment","onUpdateComment","updateComment","App","msgAlerts","filter","msg","uuid","path","PostCreate","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0eea2b8e.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { NavLink } from 'react-router-dom'\n\n// options available for authenticated user\nconst authenticatedOptions = (\n  <Fragment>\n    <NavLink to='/change-password' className='nav-link'>\n        Change Password\n    </NavLink>\n    <NavLink to='/create-post' className='nav-link'>\n        Create Post\n    </NavLink>\n    <NavLink to='/sign-out' className='nav-link'>\n        Sign Out\n    </NavLink>\n  </Fragment>\n)\n// options available for unauthenticated user\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </Fragment>\n)\n// options available regardless of authentication\nconst alwaysOptions = (\n  <Fragment>\n    <NavLink exact to='/posts-all' className='nav-link'>Home</NavLink>\n  </Fragment>\n)\n\nconst Header = ({ user }) => (\n  <Navbar bg='primary' variant='dark' expand='md'>\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n    <Navbar.Collapse id='basic-navbar-nav'>\n      <Nav className='ml-auto'>\n        {/* determines if user is logged in */}\n        {user && (\n          <span className='navbar-text mr-2'>Welcome, {user.email}</span>\n        )}\n        {alwaysOptions}\n        {user ? authenticatedOptions : unauthenticatedOptions}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://fathomless-forest-03421.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n// sign up api\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n// sign in api\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n// sign out api, requires token\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n// change password api, requires token\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n// create sign up class with constructor and state\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\n// handles change of state in input fields\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\n// handles sign up function on click\nonSignUp = (event) => {\n  // prevents page reload\n  event.preventDefault()\n  // deconstruct props for later use\n  const { msgAlert, history, setUser } = this.props\n  // sign up API call\n  signUp(this.state)\n    .then(() => signIn(this.state))\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n    )\n    // redirect user\n    .then(() => history.push('/posts-all'))\n    .catch((error) => {\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  // destructuring state for later use\n  const { email, password, passwordConfirmation } = this.state\n  // sign up user form\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={this.onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignUp)\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\nexport const createPostSuccess = 'Post created successfully!'\nexport const createPostFailure = 'Failed to create a post.  Try again.'\nexport const createCommentSuccess = 'Comment created successfully!'\nexport const createCommentFailure = 'Failed to create a comment.  Try again.'\nexport const updateCommentSuccess = 'Comment updated.'\nexport const updateCommentFailure = 'Failed to update comment.  Try again.'\nexport const showIndexSuccess = 'Index of posts.'\nexport const showIndexFailure = 'Can not get posts.'\nexport const showPostSuccess = 'Here is your post.'\nexport const showPostFailure = 'Can not get your post.'\nexport const deletePostSuccess = 'Post deleted.'\nexport const deletePostFailure = 'Failed to delete post.'\nexport const deleteCommentSuccess = 'Comment deleted.'\nexport const deleteCommentFailure = 'Can not delete comment.'\nexport const updatePostSuccess = 'Post updated.'\nexport const updatePostFailure = 'Can not update post.'\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n// Create sign in class with state\nclass SignIn extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\n// handles state change of input fields\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\n// handles sign in event\nonSignIn = (event) => {\n  // prevents page reload\n  event.preventDefault()\n  // destructuring of props for later use\n  const { msgAlert, history, setUser } = this.props\n  // sign in API call\n  signIn(this.state)\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n    )\n    // send to post list when success\n    .then(() => history.push('/posts-all'))\n    .catch((error) => {\n      this.setState({ email: '', password: '' })\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  // destructuring state for later use\n  const { email, password } = this.state\n  // sign in form\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={this.onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignIn)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n// Create sign out class\nclass SignOut extends Component {\n  // on page load\n  componentDidMount () {\n    // destructuring props for later use\n    const { msgAlert, history, clearUser, user } = this.props\n    // sign out API call\n    signOut(user)\n      .finally(() =>\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      )\n      // redirects user on sign out\n      .finally(() => history.push('/'))\n      // clears user\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n// create change password component\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\n// handles state change in input fields of form\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\n// change password function on click event\nonChangePassword = (event) => {\n  // prevents reset of browser\n  event.preventDefault()\n  // destructuring fo props for later use\n  const { msgAlert, history, user } = this.props\n  // api call to change password\n  changePassword(this.state, user)\n    .then(() =>\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n    )\n    // returns to homepage\n    .then(() => history.push('/'))\n    .catch((error) => {\n      // sets clears old and new password state if error\n      this.setState({ oldPassword: '', newPassword: '' })\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  // destructuring of passwords for later use\n  const { oldPassword, newPassword } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(ChangePassword)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\n// Create Post Request\n// assume that `data` is an object with `title` and `director`\n// { title: 'something', director: 'someone' }\nexport const createPost = (data, user) => {\n  return axios({\n    url: apiUrl + '/create-post',\n    method: 'POST',\n    data: { post: data },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// Index request\n// no data, we will need a token\nexport const indexPosts = (user) => {\n  return axios({\n    // method key sets the HTTP verb/method for this request\n    // GET is the default method, so we can include or not up to us\n    method: 'GET',\n    url: apiUrl + '/posts',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n// index all posts, no token needed.  Anyone can view posts.\nexport const indexAllPosts = (user) => {\n  return axios({\n    // method key sets the HTTP verb/method for this request\n    // GET is the default method, so we can include or not up to us\n    method: 'GET',\n    url: apiUrl + '/posts-all'\n  })\n}\n\n// GET /Posts/:id, requires token\nexport const showPost = (id, user) => {\n  return axios({\n    url: apiUrl + '/post/' + id,\n    // method is optional, default is GET\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// DELETE /Posts/:id, requires token\nexport const deletePost = (id, user) => {\n  return axios({\n    url: apiUrl + '/post/' + id,\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// PATCH /Posts/:id, requires token\nexport const updatePost = (data, id, user) => {\n  return axios({\n    url: apiUrl + '/update-post/' + id,\n    method: 'patch',\n    data: { post: data },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport { createPost } from '../../api/post'\nimport { createPostSuccess, createPostFailure } from '../AutoDismissAlert/messages'\n// create create post class, constructor and state\nclass CreatePost extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      title: '',\n      subject: '',\n      content: '',\n      image: ''\n    }\n  }\n\n  // changes state of input values\n            handleChange = (event) =>\n              this.setState({\n                [event.target.name]: event.target.value\n              })\n\n            // creates post on click\n            onCreatePost = (event) => {\n              // prevent page refresh\n              event.preventDefault()\n              // destructuring props for use later\n              const { msgAlert, history, user } = this.props\n              // create post API call\n              createPost(this.state, user)\n                .then(() =>\n                  msgAlert({\n                    heading: 'Post Created',\n                    message: createPostSuccess,\n                    variant: 'success'\n                  })\n                )\n                // redirect to after post created\n                .then((res) => history.push('/posts-all'))\n                .catch((error) => {\n                  this.setState({ title: '', subject: '', content: '', image: '' })\n                  msgAlert({\n                    heading: 'Failed with error: ' + error.message,\n                    message: createPostFailure,\n                    variant: 'danger'\n                  })\n                })\n                // redirect after post create fail\n                .then(() => history.push('/posts-all'))\n            }\n\n            render () {\n              // destructuring state for later use\n              const { title, subject, content, image } = this.state\n              // create create post form\n              return (\n                <>\n                  <div className='row'>\n                    <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n                      <h3>Create Post</h3>\n                      <Form onSubmit={this.onCreatePost}>\n                        <Form.Group controlId='title'>\n                          <Form.Label>Post Title</Form.Label>\n                          <Form.Control\n                            required\n                            name='title'\n                            value={title}\n                            placeholder='Post Title'\n                            onChange={this.handleChange}\n                          />\n                        </Form.Group>\n                        <Form.Group controlId='subject'>\n                          <Form.Label>Subject</Form.Label>\n                          <Form.Control\n                            required\n                            name='subject'\n                            value={subject}\n                            placeholder='subject'\n                            onChange={this.handleChange}\n                          />\n                        </Form.Group>\n                        <Form.Group controlId='content'>\n                          <Form.Label>content</Form.Label>\n                          <Form.Control\n                            required\n                            name='content'\n                            value={content}\n                            placeholder='content'\n                            as=\"textarea\"\n                            rows={4}\n                            onChange={this.handleChange}\n                          />\n                        </Form.Group>\n                        <Form.Group controlId='image'>\n                          <Form.Label>Image</Form.Label>\n                          <Form.Control\n                            name='image'\n                            value={image}\n                            placeholder='image'\n                            onChange={this.handleChange}\n                          />\n                        </Form.Group>\n                        <Button variant='primary' type='submit'>\n                                Submit\n                        </Button>\n                      </Form>\n                    </div>\n                  </div>\n                </>\n              )\n            }\n}\n\nexport default withRouter(CreatePost)\n","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { indexAllPosts } from '../../api/post'\nimport { showIndexFailure, showIndexSuccess } from '../AutoDismissAlert/messages'\nimport Card from 'react-bootstrap/Card'\n\n// create index of all posts class and constructor with state\nclass IndexAllPosts extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      post: null,\n      loading: true\n    }\n  }\n\n  // occurs on page render first time\n  componentDidMount () {\n    const { user, msgAlert } = this.props\n    // API call for index of all posts\n    indexAllPosts(user)\n      .then((response) =>\n        this.setState({\n          post: response.data.posts,\n          loading: false\n        })\n      )\n      .then(() =>\n        msgAlert({\n          heading: 'Index Success',\n          message: showIndexSuccess,\n          variant: 'success'\n        })\n      )\n      .catch(() =>\n        msgAlert({\n          heading: 'Index Fail',\n          message: showIndexFailure,\n          variant: 'danger'\n        })\n      )\n  }\n\n  render () {\n    // if statement handles the issue when state is null\n    // cannot handle initial render with null.\n    if (this.state.post === null) {\n      return 'loading...'\n    }\n    // variable to save array.map()\n    let postJsx\n    if (this.posts === null) {\n      <h3>No post</h3>\n    } else {\n      // create list of posts\n      postJsx = this.state.post.map((post) => (\n        <li key={post._id}>\n          <Card style={{ width: '100%' }}>\n            <Card.Body>\n              <Link to={`/post/${post._id}`}>\n                <Card.Title>{post.title}</Card.Title>\n              </Link>\n              <Card.Subtitle className='mb-2 text-muted'>\n                {post.subject}\n              </Card.Subtitle>\n              <Card.Text>{post.content}</Card.Text>\n              <Link to={`/post/${post._id}/edit`}>update</Link>\n            </Card.Body>\n\n          </Card>\n        </li>\n      ))\n    }\n    return (\n      <div>\n        <h1>Post</h1>\n        <p>{this.state.loading && 'loading ...'}</p>\n        {/* display posts */}\n        <ul>{postJsx}</ul>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(IndexAllPosts)\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport { Link } from 'react-router-dom'\n// creating a component comment that accepts props it will be passed\n\nconst Comment = (props) => (\n  <ul>\n    <li>Comment: {props.text}</li>\n    <li>Image: {props.image}</li>\n    {/* here Comment is accepting onClick from props */}\n    <Button onClick={() => props.onClick(props._id)}>Delete</Button>\n    <Link to={`/comments/${props.postId}/${props._id}/`}>Update\n      <Button onClick={() => props.onClickUpdate(props._id)}>Update</Button></Link>\n  </ul>\n)\n\nexport default Comment\n","import React, { Fragment } from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Comment from './CommentForm'\n// create show post format\nconst Post = (props) => (\n  <Fragment>\n    <Card style={{ width: '100%' }}>\n      <Card.Body>\n        <Card.Title>{props.title}</Card.Title>\n        <Card.Subtitle className='mb-2 text-muted'>\n          {props.subject}\n        </Card.Subtitle>\n        <Card.Text>{props.content}</Card.Text>\n        <Card.Text>{props.image}</Card.Text>\n        <Card.Text>post Id:{props.postId}</Card.Text>\n        {/* <Card.Text>{props.comments.map(comment => comment.text)}</Card.Text> */}\n        <Card.Text>\n          {props.comments.map(({ id, text, image, _id }) => (\n            // passing props to comment form component\n            <Comment\n              key={id}\n              text={text}\n              image={image}\n              _id={_id}\n              postId={props.postId}\n              // here we are carrying through onClick from Post to be handed down to Comment\n              onClick={props.onClick}\n              // onClickUpdate={props.onClickUpdate}\n            />\n          ))}\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  </Fragment>\n)\n\nexport default Post\n","import React, { Component } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n// API request\nimport { showPost, deletePost } from '../../api/post'\nimport { deleteComment } from '../../api/comment'\nimport Button from 'react-bootstrap/Button'\nimport Post from '../ComponentForms/PostForm'\nimport {\n  showPostFailure, showPostSuccess, deletePostSuccess,\n  deletePostFailure, deleteCommentSuccess, deleteCommentFailure\n} from '../AutoDismissAlert/messages'\n// creates single show post with constructor, state\nclass ShowPost extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      post: {\n        title: '',\n        subject: '',\n        content: '',\n        image: '',\n        comments: []\n      }\n    }\n  }\n\n  // on initial page render\n  componentDidMount () {\n    // destructuring props for later use\n    const { match, user, msgAlert } = this.props\n    // show post API call\n    showPost(match.params.id, user)\n    // sets state of post\n      .then((res) => this.setState({ post: res.data.post }))\n      .then(() =>\n        msgAlert({\n          heading: 'Show post success',\n          message: showPostSuccess,\n          variant: 'success'\n        })\n      )\n      .catch(() =>\n        msgAlert({\n          heading: 'Show post failed :(',\n          message: showPostFailure,\n          variant: 'danger'\n        })\n      )\n  }\n\n  handleDeletePost = (event) => {\n    const { match, user, msgAlert, history } = this.props\n    deletePost(match.params.id, user)\n      // Redirect to the list of posts\n      .then(() => history.push('/posts-all'))\n      .then(() =>\n        msgAlert({\n          heading: 'Delete post successfully',\n          message: deletePostSuccess,\n          variant: 'success'\n        })\n      )\n      .catch(() =>\n        msgAlert({\n          heading: 'Delete post failed :(',\n          message: deletePostFailure,\n          variant: 'danger'\n        })\n      )\n  }\n\n  // handles delete comment\n    handleDeleteComment = (_id) => {\n      // destructuring props for later use\n      const { match, user, msgAlert, history } = this.props\n      // delete comment API call\n      deleteComment(match.params.id, _id, user)\n        .then(() =>\n          msgAlert({\n            heading: 'Delete comment successfully',\n            message: deleteCommentSuccess,\n            variant: 'success'\n          })\n        )\n        // Redirect to the list of posts\n        .then(() => history.push('/post/:id'))\n        .catch(() =>\n          msgAlert({\n            heading: 'Delete post failed :(',\n            message: deleteCommentFailure,\n            variant: 'danger'\n          })\n        )\n    }\n\n    render () {\n      // deconstructing state of post for later use\n      const { title, subject, content, image, comments, _id } = this.state.post\n      return (\n        <>\n          {/* bringing in the component Post that is accepting passed down data as props */}\n          <Post\n            title={title}\n            subject={subject}\n            content={content}\n            image={image}\n            comments={comments}\n            postId={_id}\n            // our functions are passed to PostForm\n            onClick={this.handleDeleteComment}\n            onClickUpdate={this.handleUpdateComment}\n          />\n          {/* button to delete post */}\n          <Button onClick={this.handleDeletePost}>Delete</Button>\n          {/* create comment */}\n          <Link to={`/comments/${_id}`}>Comment</Link>\n        </>\n      )\n    }\n}\n\nexport default withRouter(ShowPost)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\n// Create comment API Request, requires user.token\nexport const createComment = (data, user, id) => {\n  // data.postId = id\n  return axios({\n    url: apiUrl + '/post/' + id,\n    method: 'POST',\n    data: { comment: data },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// DELETE /Posts/:id, requires user.token\nexport const deleteComment = (postId, commentId, user) => {\n  return axios({\n    url: apiUrl + '/post/' + postId + '/' + commentId,\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// PATCH /Posts/:id, requires token\nexport const updateComment = (data, postId, commentId, user) => {\n  return axios({\n    url: apiUrl + '/post/' + postId + '/' + commentId,\n    method: 'PATCH',\n    data: { post: data },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n// API request\nimport { updatePost, showPost } from '../../api/post'\nimport { updatePostSuccess, updatePostFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n// create class for update post with constructor and state\nclass UpdatePost extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      post: {\n        title: '',\n        subject: '',\n        content: '',\n        image: ''\n      }\n    }\n  }\n\n  // on page load\n  componentDidMount () {\n    // destructuring props for later use\n    const { match, user, msgAlert } = this.props\n    // show post API call\n    showPost(match.params.id, user)\n    // sets new state of post\n      .then(res => this.setState({ post: res.data.post }))\n      .catch(err => msgAlert({\n        heading: 'Show post failed :(',\n        message: 'Something went wrong: ' + err.message,\n        variant: 'danger'\n      }))\n  }\n\n  // handles state change for input\n  handleChange = (event) => {\n    const userInput = { [event.target.name]: event.target.value }\n    this.setState(currState => {\n      // \"Spread\" out current post state key/value pairs\n      return { post: { ...currState.post, ...userInput } }\n    })\n  }\n\n  // updates post on click\n  onUpdatePost = (event) => {\n    // prevent page reload\n    event.preventDefault()\n    // destructuring props for later use\n    const { user, msgAlert, history, match } = this.props\n    // updatePost API call\n    updatePost(this.state.post, match.params.id, user)\n      .then(() => msgAlert({\n        heading: 'Post Updated!',\n        message: updatePostSuccess,\n        variant: 'success'\n      }))\n      .then(res => history.push('/posts-all'))\n      .catch(() => {\n        msgAlert({\n          heading: 'Post update failed :(',\n          message: updatePostFailure,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    // destructuring state of post for later use\n    const { title, subject, content, image } = this.state.post\n    // update post form\n    return (\n      <>\n        <div className='row'>\n          <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n            <h3>Update Post</h3>\n            <Form onSubmit={this.onUpdatePost}>\n              <Form.Group controlId='title'>\n                <Form.Label>Post Title</Form.Label>\n                <Form.Control\n                  required\n                  name='title'\n                  value={title}\n                  onChange={this.handleChange}\n                />\n              </Form.Group>\n              <Form.Group controlId='subject'>\n                <Form.Label>Subject</Form.Label>\n                <Form.Control\n                  required\n                  name='subject'\n                  value={subject}\n                  onChange={this.handleChange}\n                />\n              </Form.Group>\n              <Form.Group controlId='content'>\n                <Form.Label>content</Form.Label>\n                <Form.Control\n                  required\n                  name='content'\n                  value={content}\n                  as=\"textarea\"\n                  rows={4}\n                  onChange={this.handleChange}\n                />\n              </Form.Group>\n              <Form.Group controlId='image'>\n                <Form.Label>Image</Form.Label>\n                <Form.Control\n\n                  name='image'\n                  value={image}\n                  placeholder='image'\n                  onChange={this.handleChange}\n                />\n              </Form.Group>\n              <Button variant='primary' type='submit'>\n                    Submit\n              </Button>\n            </Form>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default withRouter(UpdatePost)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { createCommentSuccess, createCommentFailure } from '../AutoDismissAlert/messages'\nimport { createComment } from '../../api/comment'\n\n// create create comment class with constructor and state\nclass CreateComment extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      text: '',\n      image: ''\n    }\n  }\n\n  // handles state change of input fields\n  handleChange = (event) =>\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n\n  // handles create comment event on click\n  onCreateComment = (event) => {\n    // prevent browser refresh\n    event.preventDefault()\n    // deconstructing props for later use\n    const { msgAlert, history, user, match } = this.props\n    // create comment API call\n    createComment(this.state, user, match.params.id)\n      .then(() =>\n        msgAlert({\n          heading: 'Comment Created',\n          message: createCommentSuccess,\n          variant: 'success'\n        })\n      )\n      // redirect user on create comment success\n      .then((res) => history.push('/post/' + match.params.id))\n      .catch((error) => {\n        this.setState({ text: '', image: '' })\n        msgAlert({\n          heading: 'Failed with error: ' + error.message,\n          message: createCommentFailure,\n          variant: 'danger'\n        })\n        // redirect on create comment failure\n        history.push('/post/' + match.params.id)\n      })\n  }\n\n  render () {\n    // destructuring state for later use\n    const { text, image } = this.state\n    // create comment form\n    return (\n      <>\n        <div className='row'>\n          <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n            <h3>Create Comment</h3>\n            <Form onSubmit={this.onCreateComment}>\n              <Form.Group controlId='text'>\n                <Form.Label>Comment Text</Form.Label>\n                <Form.Control\n                  required\n                  name='text'\n                  value={text}\n                  placeholder='Comment Title'\n                  onChange={this.handleChange}\n                />\n              </Form.Group>\n              <Form.Group controlId='image'>\n                <Form.Label>Image</Form.Label>\n                <Form.Control\n\n                  name='image'\n                  value={image}\n                  placeholder='image'\n                  onChange={this.handleChange}\n                />\n              </Form.Group>\n\n              <Button variant='primary' type='submit'>\n                      Submit\n              </Button>\n\n            </Form>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default withRouter(CreateComment)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n// API request\nimport { updateComment } from '../../api/comment'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { updateCommentSuccess, updateCommentFailure } from '../AutoDismissAlert/messages'\n// create update comment class -- under construction\nclass UpdateComment extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      comment: {\n        text: '',\n        image: ''\n      }\n    }\n  }\n\n  handleChange = (event) => {\n    // because `this.state.comment` is an object with multiple keys, we have to do some fancy updating\n    const userInput = { [event.target.name]: event.target.value }\n    this.setState(currState => {\n      // \"Spread\" out current comment state key/value pairs, then add the new one at the end\n      // this will override the old key/value pair in the state but leave the others untouched\n      return { comment: { ...currState.comment, ...userInput } }\n    })\n  }\n\n  onUpdateComment = (event) => {\n    event.preventDefault()\n\n    const { user, msgAlert, history, match } = this.props\n    updateComment(this.state.comment, match.params.id, match.params.postId, user)\n      .then(() => msgAlert({\n        heading: 'Comment Updated!',\n        message: updateCommentSuccess,\n        variant: 'success'\n      }))\n      // redirect on success\n      .then(res => history.push('/post/:id'))\n      .catch(() => {\n        msgAlert({\n          heading: 'Comment update failed :(',\n          message: updateCommentFailure,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    // destructuring comment state for later use\n    const { text, image } = this.state.comment\n    // update comment form\n    return (\n      <>\n        <div className='row'>\n          <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n            <h3>Update Comment</h3>\n            <Form onSubmit={this.onUpdateComment}>\n              <Form.Group controlId='text'>\n                <Form.Label>Comment Text</Form.Label>\n                <Form.Control\n                  required\n                  name='text'\n                  value={text}\n                  onChange={this.handleChange}\n                />\n              </Form.Group>\n              <Form.Group controlId='image'>\n                <Form.Label>Image</Form.Label>\n                <Form.Control\n                  name='image'\n                  value={image}\n                  placeholder='image'\n                  onChange={this.handleChange}\n                />\n              </Form.Group>\n              <Button variant='primary' type='submit'>\n                    Submit\n              </Button>\n            </Form>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default withRouter(UpdateComment)\n","/* eslint-disable no-tabs */\nimport React, { Component, Fragment } from 'react'\nimport { Route } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport PostCreate from './components/post/PostCreate'\nimport IndexAllPosts from './components/post/IndexPost'\nimport ShowPost from './components/post/ShowPost'\nimport UpdatePost from './components/post/UpdatePost'\nimport CreateComment from './components/comment/CreateComment'\nimport UpdateComment from './components/comment/UpdateComment'\n// create app class with constructor and state\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      user: null,\n      msgAlerts: []\n    }\n  }\n\n  // set user method sets state of user\n  setUser = (user) => this.setState({ user })\n  // clear user method sets state of user to null\n  clearUser = () => this.setState({ user: null })\n  // delete alert method\n  deleteAlert = (id) => {\n    this.setState((state) => {\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\n    })\n  }\n\n  // message alert method creates messages\n  msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    this.setState((state) => {\n      return {\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\n      }\n    })\n  }\n\n  render () {\n    // deconstructing state for later use\n    const { msgAlerts, user } = this.state\n    // displays header\n    return (\n      <Fragment>\n        <p>title</p>\n        <Header user={user} />\n        {msgAlerts.map((msgAlert) => (\n          <AutoDismissAlert\n            key={msgAlert.id}\n            heading={msgAlert.heading}\n            variant={msgAlert.variant}\n            message={msgAlert.message}\n            id={msgAlert.id}\n            deleteAlert={this.deleteAlert}\n          />\n        ))}\n        {/* routes */}\n        <main className='container'>\n          {/* unauthenticated post routes */}\n          <Route\n            path='/sign-up'\n            render={() => (\n              <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path='/sign-in'\n            render={() => (\n              <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path='/posts-all'\n            render={() => <IndexAllPosts msgAlert={this.msgAlert} />}\n          />\n\n          {/* authenticated post routes */}\n          <AuthenticatedRoute\n            user={user}\n            path='/sign-out'\n            render={() => (\n              <SignOut\n                msgAlert={this.msgAlert}\n                clearUser={this.clearUser}\n                user={user}\n              />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/change-password'\n            render={() => (\n              <ChangePassword msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/create-post'\n            render={() => <PostCreate msgAlert={this.msgAlert} user={user} />}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/post/:id/edit'\n            render={() => <UpdatePost msgAlert={this.msgAlert} user={user} />}\n          />\n          <AuthenticatedRoute\n            user={user}\n            exact\n            path='/post/:id'\n            render={() => <ShowPost msgAlert={this.msgAlert} user={user} />}\n          />\n          {/* authenticated comments routes */}\n          <AuthenticatedRoute\n            user={user}\n            exact\n            path='/comments/:id'\n            render={() => (\n              <CreateComment msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            exact\n            path='/comments/:postId/:id'\n            render={() => (\n              <UpdateComment msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n\n        </main>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}